Elm.AldousBroder = Elm.AldousBroder || {};
Elm.AldousBroder.make = function (_elm) {
   "use strict";
   _elm.AldousBroder = _elm.AldousBroder || {};
   if (_elm.AldousBroder.values)
   return _elm.AldousBroder.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "AldousBroder",
   $Basics = Elm.Basics.make(_elm),
   $Cell = Elm.Cell.make(_elm),
   $Grid = Elm.Grid.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var on = function (grid) {
      return function () {
         var walkRandomly = F3(function (grid$$,
         cell,
         unvisited) {
            return _U.eq(unvisited,
            0) ? grid$$ : function () {
               var sample = A2($Grid.neighbors,
               grid$$,
               cell);
               var $ = A2($Random.generate,
               A2($Random.$int,
               1,
               $List.length(sample)),
               grid$$.rnd.seed),
               rand = $._0,
               seed = $._1;
               var neighbor = $Grid.toValidCell($List.head($List.reverse(A2($List.take,
               rand,
               sample))));
               return $Basics.not($Cell.hasLinks(neighbor)) ? function () {
                  var grid$$$ = $Grid.updateRnd(A4($Grid.linkCells,
                  grid$$,
                  cell,
                  neighbor,
                  true));
                  return A3(walkRandomly,
                  grid$$$,
                  neighbor,
                  unvisited - 1);
               }() : A3(walkRandomly,
               $Grid.updateRnd(grid$$),
               neighbor,
               unvisited);
            }();
         });
         var $ = $Grid.randomCell(grid),
         grid$ = $._0,
         startCell = $._1;
         return A3(walkRandomly,
         grid$,
         startCell,
         $Grid.size(grid) - 1);
      }();
   };
   _elm.AldousBroder.values = {_op: _op
                              ,on: on};
   return _elm.AldousBroder.values;
};